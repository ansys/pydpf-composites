
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/gallery_examples/8_assembly_example.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_gallery_examples_8_assembly_example.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_gallery_examples_8_assembly_example.py:


.. _assembly_example:

Post-process an Assembly
------------------------

Post-process an assembly with multiple composite parts.

This example shows how an assembly of a shell and solid composite
model can be post-processed. The :class:`Composite Model <ansys.dpf.composites.CompositeModel>`
helps to access the data of the different parts.

.. GENERATED FROM PYTHON SOURCE LINES 15-19

Script
~~~~~~

Load Ansys libraries

.. GENERATED FROM PYTHON SOURCE LINES 19-26

.. code-block:: default


    from ansys.dpf.composites.composite_model import CompositeModel
    from ansys.dpf.composites.connect_to_or_start_server import connect_to_or_start_server
    from ansys.dpf.composites.enums import FailureOutput
    from ansys.dpf.composites.example_helper import get_continuous_fiber_example_files
    from ansys.dpf.composites.failure_criteria import CombinedFailureCriterion, MaxStressCriterion








.. GENERATED FROM PYTHON SOURCE LINES 27-29

Start a server and get the examples files.
This will copy the example files into the current working directory.

.. GENERATED FROM PYTHON SOURCE LINES 29-32

.. code-block:: default

    server = connect_to_or_start_server()
    composite_files_on_server = get_continuous_fiber_example_files(server, "assembly")








.. GENERATED FROM PYTHON SOURCE LINES 33-34

Configure the combined failure criterion

.. GENERATED FROM PYTHON SOURCE LINES 34-39

.. code-block:: default

    combined_fc = CombinedFailureCriterion(
        name="failure of all materials",
        failure_criteria=[MaxStressCriterion()],
    )








.. GENERATED FROM PYTHON SOURCE LINES 40-41

Set up the composite model

.. GENERATED FROM PYTHON SOURCE LINES 41-43

.. code-block:: default

    composite_model = CompositeModel(composite_files_on_server, server)








.. GENERATED FROM PYTHON SOURCE LINES 44-46

Plot the max IRF per element


.. GENERATED FROM PYTHON SOURCE LINES 46-50

.. code-block:: default

    output_all_elements = composite_model.evaluate_failure_criteria(combined_criteria=combined_fc)
    irf_field = output_all_elements.get_field({"failure_label": FailureOutput.failure_value})
    irf_field.plot()




.. image-sg:: /examples/gallery_examples/images/sphx_glr_8_assembly_example_001.png
   :alt: 8 assembly example
   :srcset: /examples/gallery_examples/images/sphx_glr_8_assembly_example_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 51-56

In the assembly exist two composite definitions, one with the label "shell" and one
with the label "solid". To query the layup properties we have to query the
properties with the correct composite_definition_label.
This example shows how to get ElementInfo for all layered elements


.. GENERATED FROM PYTHON SOURCE LINES 56-62

.. code-block:: default

    element_infos = []
    for composite_label in composite_model.composite_definition_labels:
        for element_id in composite_model.get_all_layered_element_ids_for_composite_definition_label(
            composite_label
        ):
            element_infos.append(composite_model.get_element_info(element_id, composite_label))








.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  1.907 seconds)


.. _sphx_glr_download_examples_gallery_examples_8_assembly_example.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: 8_assembly_example.py <8_assembly_example.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: 8_assembly_example.ipynb <8_assembly_example.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
