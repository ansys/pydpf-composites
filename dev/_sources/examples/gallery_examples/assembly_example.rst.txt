
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/gallery_examples/assembly_example.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_gallery_examples_assembly_example.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_gallery_examples_assembly_example.py:


.. _assembly_example:

How to use the CompositeModel for an assembly model
---------------------------------------------------------------

This example shows how an assembly of a shell and solid composite
model can be post-processed.

.. GENERATED FROM PYTHON SOURCE LINES 12-13

Load ansys libraries

.. GENERATED FROM PYTHON SOURCE LINES 13-24

.. code-block:: default


    from ansys.dpf.composites.composite_model import CompositeModel
    from ansys.dpf.composites.connect_to_or_start_server import connect_to_or_start_server
    from ansys.dpf.composites.enums import FailureOutput
    from ansys.dpf.composites.example_helper.example_helper import get_continuous_fiber_example_files
    from ansys.dpf.composites.failure_criteria import CombinedFailureCriterion, MaxStressCriterion

    server_context = connect_to_or_start_server()
    composite_files_on_server = get_continuous_fiber_example_files(server_context, "assembly")









.. GENERATED FROM PYTHON SOURCE LINES 25-26

Definition of the combined failure criterion

.. GENERATED FROM PYTHON SOURCE LINES 26-33

.. code-block:: default

    def get_combined_failure_criterion() -> CombinedFailureCriterion:
        return CombinedFailureCriterion(
            name="failure of all materials",
            failure_criteria=[MaxStressCriterion()],
        )









.. GENERATED FROM PYTHON SOURCE LINES 34-35

Setup composite model

.. GENERATED FROM PYTHON SOURCE LINES 35-40

.. code-block:: default

    composite_model = CompositeModel(composite_files_on_server, server_context.server)
    output_all_elements = composite_model.evaluate_failure_criteria(
        combined_criteria=get_combined_failure_criterion()
    )








.. GENERATED FROM PYTHON SOURCE LINES 41-43

Plot the max IRF per element


.. GENERATED FROM PYTHON SOURCE LINES 43-48

.. code-block:: default


    irf_field = output_all_elements.get_field({"failure_label": FailureOutput.failure_value.value})
    irf_field.plot()





.. image-sg:: /examples/gallery_examples/images/sphx_glr_assembly_example_001.png
   :alt: assembly example
   :srcset: /examples/gallery_examples/images/sphx_glr_assembly_example_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 49-54

In the assembly exist two composite definition, one with the label "shell" and one
with the label "solid". To query the layup properties we have to query the
properties with the correct composite_definition_label.
This example shows how to get ElementInfo for all layered elements


.. GENERATED FROM PYTHON SOURCE LINES 54-60

.. code-block:: default

    element_infos = []
    for composite_label in composite_model.composite_definition_labels:
        for element_id in composite_model.get_all_layered_element_ids_for_composite_definition_label(
            composite_label
        ):
            element_infos.append(composite_model.get_element_info(element_id, composite_label))








.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  6.793 seconds)


.. _sphx_glr_download_examples_gallery_examples_assembly_example.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: assembly_example.py <assembly_example.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: assembly_example.ipynb <assembly_example.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
