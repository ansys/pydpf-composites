
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/gallery_examples/get_material_properties_example.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_gallery_examples_get_material_properties_example.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_gallery_examples_get_material_properties_example.py:


.. _material_properties:

Get Material Properties and evaluate basic failure criterion
-------------------------------------------------------------

This example shows how to access constant material properties and
evaluate a basic strain limit failure criterion. Note: Only constant material properties
are currently supported.

.. GENERATED FROM PYTHON SOURCE LINES 13-14

Import dependencies

.. GENERATED FROM PYTHON SOURCE LINES 14-23

.. code-block:: default

    import ansys.dpf.core as dpf
    import numpy as np

    from ansys.dpf.composites import MaterialProperty, get_selected_indices
    from ansys.dpf.composites.composite_model import CompositeModel
    from ansys.dpf.composites.connect_to_or_start_server import connect_to_or_start_server
    from ansys.dpf.composites.enums import Sym3x3TensorComponent
    from ansys.dpf.composites.example_helper.example_helper import get_continuous_fiber_example_files








.. GENERATED FROM PYTHON SOURCE LINES 24-25

Start server and load example files

.. GENERATED FROM PYTHON SOURCE LINES 25-29

.. code-block:: default


    server_context = connect_to_or_start_server()
    composite_files_on_server = get_continuous_fiber_example_files(server_context, "shell")








.. GENERATED FROM PYTHON SOURCE LINES 30-31

Setup composite model

.. GENERATED FROM PYTHON SOURCE LINES 31-33

.. code-block:: default

    composite_model = CompositeModel(composite_files_on_server, server_context.server)








.. GENERATED FROM PYTHON SOURCE LINES 34-39

Get dictionary that maps dpf_material_id to properties
The creation of the dictionary is currently quite expensive and
should be done before using the properties in a loop.
Currently only constant properties are supported.
For variable material properties, the default value is returned.

.. GENERATED FROM PYTHON SOURCE LINES 39-44

.. code-block:: default


    material_property = MaterialProperty.Strain_Limits_eXt
    property_dict = composite_model.get_constant_property_dict([material_property])









.. GENERATED FROM PYTHON SOURCE LINES 45-46

Get example strain field

.. GENERATED FROM PYTHON SOURCE LINES 46-52

.. code-block:: default

    strain_operator = dpf.Operator("EPEL")
    strain_operator.inputs.data_sources(composite_model.data_sources.rst)
    strain_operator.inputs.bool_rotate_to_global(False)
    strain_field = strain_operator.get_output(pin=0, output_type=dpf.types.fields_container)[0]









.. GENERATED FROM PYTHON SOURCE LINES 53-54

Evaluate basic max strain failure criterion

.. GENERATED FROM PYTHON SOURCE LINES 54-77

.. code-block:: default

    result_field = dpf.field.Field(location=dpf.locations.elemental, nature=dpf.natures.scalar)

    with result_field.as_local_field() as local_result_field:
        component = Sym3x3TensorComponent.tensor11

        for element_id in strain_field.scoping.ids:
            strain_data = strain_field.get_entity_data_by_id(element_id)
            element_info = composite_model.get_element_info(element_id)
            element_max = 0
            for layer_index, dpf_material_id in enumerate(element_info.dpf_material_ids):
                tensile_strain_limit_1 = property_dict[dpf_material_id][material_property]
                selected_indices = get_selected_indices(element_info, layers=[layer_index])
                # Tensile max strain criteria in 1 direction
                layer_strain_values = strain_data[selected_indices][:, component.value]
                if tensile_strain_limit_1 > 0:
                    layer_max = np.max(layer_strain_values)
                    element_max = max(element_max, layer_max / tensile_strain_limit_1)

            # add to output field
            local_result_field.append([element_max], element_id)


    composite_model.get_mesh().plot(result_field)



.. image-sg:: /examples/gallery_examples/images/sphx_glr_get_material_properties_example_001.png
   :alt: get material properties example
   :srcset: /examples/gallery_examples/images/sphx_glr_get_material_properties_example_001.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.635 seconds)


.. _sphx_glr_download_examples_gallery_examples_get_material_properties_example.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: get_material_properties_example.py <get_material_properties_example.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: get_material_properties_example.ipynb <get_material_properties_example.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
