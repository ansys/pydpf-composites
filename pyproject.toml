[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
# Check https://python-poetry.org/docs/pyproject/ for all available sections
name = "ansys-dpf-composites"
version = "0.2.0"
description = "A python wrapper for ansys dpf composites"
license = "MIT"
authors = ["ANSYS, Inc. <ansys.support@ansys.com>"]
maintainers = ["PyAnsys developers <pyansys.maintainers@ansys.com>"]
readme = "README.rst"
repository = "https://github.com/ansys/pydpf-composites"
documentation = "https://composites.dpf.docs.pyansys.com"
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
packages = [
    { include = "ansys", from = "src" },
]

[tool.poetry.dependencies]
python = ">=3.8,<4.0"
numpy = "^1.22"
build = {version = "^0.8.0", optional = true}
twine = {version = "^4.0.1", optional = true}
Sphinx =  {version = "^5.0.1", optional = true}
numpydoc = {version = "^1.5", optional = true}
ansys-sphinx-theme = {version = "^0", optional = true}
sphinx-copybutton =  {version = "^0.4", optional = true}
sphinx_gallery = {version = "^0.11.0", optional = true}
sphinx-design = {version = "^0.3.0", optional = true}
pypandoc = {version = "^1.8.1", optional = true}
pytest = {version = "^7.1.2", optional = true}
pytest-cov = {version = "^3.0.0", optional = true}
mypy = {version = "^1.2.0", optional = true}
mypy-extensions = {version = "^1.0.0", optional = true}
# If this version changes also the link in doc/src/conf.py intersphinx-mapping has to change
ansys-dpf-core = ">=0.8,<1"
vtk = {version = "*"}
matplotlib = {version = "^3.5.0"}
pyvista = {version = ">=0.36.1,<1"}
pre-commit = {version = "*", optional = true}
# Upper bound because there is a problem with examples in versions > 1.20.1
sphinx-autodoc-typehints = {version = "^1.19,<1.20.2", optional = true}
pylint = {version = "^2.13", optional = true}
scipy = {version = ">=1.9.0", optional = true}

[tool.poetry.extras]
all = [
    "Sphinx",
    "ansys-sphinx-theme",
    "sphinx-copybutton",
    "sphinx_gallery",
    "sphinx-design",
    "numpydoc",
    "pytest",
    "pytest-cov",
    "twine",
    "build",
    "mypy",
    "mypy-extensions",
    "pylint",
    "pre-commit",
    "pypandoc",
    "scipy",
    "sphinx-autodoc-typehints",
]
docs = ["Sphinx", "ansys-sphinx-theme", "sphinx-copybutton", "numpydoc", "sphinx_gallery",
    "pypandoc", "sphinx-autodoc-typehints", "sphinx-design", "scipy"]
test = ["pytest", "pytest-cov"]
build = ["build", "twine"]
pre-commit = ["pre-commit", "mypy", "mypy-extensions", "pylint"]


[tool.black]
line-length = 100

[tool.isort]
profile = "black"
force_sort_within_sections = true
line_length = 100
default_section = "THIRDPARTY"
src_paths = ["doc", "src", "tests"]

[tool.coverage.run]
source = ["ansys.dpf.composites"]

[tool.coverage.report]
show_missing = true

[tool.codespell]
skip = '*.dat,*.out'
ignore-words-list = 'ans,eyt'
quiet-level = 3

[tool.pylint.messages_control]
disable = [
    "C",
    "R",
    # The 'attribute-defined-outside-init' and 'unused_argument' checks
    # produce too many false positives from constructors which go over
    # a pre-defined list of attributes (e.g. ATTRS_PUCK).
    "attribute-defined-outside-init",
    "unused-argument",
    "eval-used",
    "fixme",
]
[tool.pylint.typecheck]
ignored-classes = [
    "ansys.dpf.core.inputs.Inputs",
    "ansys.dpf.core.outputs.Outputs"
]

[tool.mypy]
python_version = 3.8
mypy_path = "$MYPY_CONFIG_FILE_DIR/src:$MYPY_CONFIG_FILE_DIR/tests"
ignore_missing_imports = true
