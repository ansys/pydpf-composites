.. toctree::
   :hidden:
   :maxdepth: 3

   self
   intro
   api/index
   examples/index
   contribute

PyDPF - Composites
------------------

PyDPF - Composites enables the post-processing of composite structures based on
`Ansys DPF`_ and the DPF Composites plugin. It implements
classes on top of DPF Composites operators and data accessors for short
fiber and layered composites (layered shell and solid elements). This module
can be used to postprocess fiber reinforced plastics and layered composites, and
to implement custom failure criteria and computation.

.. grid:: 1 1 2 2
    :gutter: 2

    .. grid-item-card:: :octicon:`rocket` Getting started
        :link: intro
        :link-type: doc

        Contains installation instructions and a simple
        example to create a failure plot from a Workbench project.

    .. grid-item-card:: :octicon:`play` Examples
        :link: examples/index
        :link-type: doc

        Demonstrates the use of PyDPF - Composites for various workflows.

    .. grid-item-card:: :octicon:`file-code` API reference
        :link: api/index
        :link-type: doc

        Describes the public Python classes, methods, and functions.

    .. grid-item-card:: :octicon:`code` Contribute
        :link: contribute
        :link-type: doc

        Provides developer installation and usage information.

The minimum set of inputs to run a postprocessing for composites is the result files of an
MAPDL solution and a material file (MATML) which was generated by Engineering Data.
Lay-up files from ACP are optional and only required for some advanced operations. Refer to
:ref:`Limitations`.

Key features
''''''''''''

Here are some key features of PyDPF - Composites:

* Postprocessing of layered shell and solid elements. MAPDL models as well as models preprocessed with ACP are supported.
* Failure criteria evaluation as shown in :ref:`Composite failure analysis <sphx_glr_examples_gallery_examples_001_failure_operator_example.py>`.
* A :class:`.SamplingPoint` class for extracting and visualizing a result over the entire thickness of a laminate as shown in
  :ref:`Sampling point <sphx_glr_examples_gallery_examples_002_sampling_point_example.py>`.
* A :class:`.ResultDefinition` class for configuring combined failure criteria and scopes.
* Accessors for getting layered properties such as plies and materials as shown in
  :ref:`Layered properties <sphx_glr_examples_gallery_examples_005_get_layup_properties_example.py>`
  and :ref:`Material properties and custom failure criterion <sphx_glr_examples_gallery_examples_004_get_material_properties_example.py>`.
* Interface to implement custom failure criteria and analysis as shown in
  :ref:`Material properties and custom failure criterion <sphx_glr_examples_gallery_examples_004_get_material_properties_example.py>`.
* Postprocessing of homogeneous elements.


.. _limitations:

Limitations
'''''''''''
- Only the Mechanical APDL solver is fully supported. LSDyna is partially supported
  as shwon in :ref:`LSDyna post-processing <sphx_glr_examples_gallery_examples_016_lsdyna_bird_strike.py>`.
  The combined failure criterion, sampling point and computation of interlaminar normal stresses
  features are not supported for LSDyna.
- The post-processing of expanded cyclic symmetry models is not implemented.
- The following operators and features are only supported if the model was
  preprocessed with ACP and if the corresponding lay-up definition file is passed to the :class:`.CompositeModel` class.

  - The evaluation of the failure criteria for sandwich
    (:class:`FaceSheetWrinklingCriterion <.failure_criteria.FaceSheetWrinklingCriterion>`,
    :class:`ShearCrimpingCriterion <.failure_criteria.ShearCrimpingCriterion>`)
    for solid elements. Layered shell elements are always supported.

  - The computation of interlaminar normal stresses (s3) for layered shell elements.
    Without ACP layup definitions, s3 is always zero. This also affects 3D failure criteria which use s3,
    such as Puck 3D. This limitation does not affect (layered) solid elements.

  - The support of variable materials and material fields. Without ACP, only the
    temperature is considered for the evaluation of variable material properties.

  - Global plies, and scoping by plies. Layer-wise post-processing is always supported.

  - Plotting results on the reference surface of a laminate.

  - Sampling point for solid elements (solid models). Note that the polar properties are 
    not supported by the Sampling point for solid elements.

Note: MAPDL models that have not been preprocessed with ACP can be converted. For more
information, see `Import of Legacy Mechanical APDL Composite Models`_ in the Ansys Help.

API changes
'''''''''''
These are the incompatible changes in the API of PyDPF - Composites and the underlying DPF operators:
  - With DPF server 10.0 (2025 R2), the input pin ``fields_container`` of the ``composite::multiple_failure_criteria_operator`` is renamed to ``section_data_container``.

.. _Ansys Workbench: https://download.ansys.com/Current%20Release
.. _Import of Legacy Mechanical APDL Composite Models: https://ansyshelp.ansys.com/account/secured?returnurl=/Views/Secured/corp/v232/en/acp_ug/acp_import_legacy_APDL_comp.html
.. _Compatibility: https://dpf.docs.pyansys.com/version/stable/getting_started/compatibility.html
.. _Ansys DPF: https://dpf.docs.pyansys.com/version/stable/
